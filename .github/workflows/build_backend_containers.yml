name: Build and Push Docker Images to ECR

on:
  push:
    tags:
      - '*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Login to Amazon ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build API Lambda Docker image
      env:
        AWS_DEFAULT_REGION: us-east-1
        AWS_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        REPOSITORY: applicant-atlas-api-lambda
        IMAGE_TAG: "0.0.3"
      run: |
        cd backend
        docker build -f Dockerfile.api.lambda -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Build Backend Lambda Docker image
      env:
        AWS_DEFAULT_REGION: us-east-1
        AWS_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        REPOSITORY: applicant-atlas-event-listener-lambda
        IMAGE_TAG: "0.0.3"
      run: |
        cd backend
        docker build -f Dockerfile.event.listener.lambda -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG